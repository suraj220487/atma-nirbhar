{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\DEV\\\\argon-react-native-master\\\\argon-react-native-master\\\\components\\\\Card.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Block, Text, theme } from 'galio-framework';\nimport { argonTheme } from \"../constants\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          item = _this$props.item,\n          horizontal = _this$props.horizontal,\n          full = _this$props.full,\n          style = _this$props.style,\n          ctaColor = _this$props.ctaColor,\n          imageStyle = _this$props.imageStyle;\n      var imageStyles = [full ? styles.fullImage : styles.horizontalImage, imageStyle];\n      var cardContainer = [styles.card, styles.shadow, style];\n      var imgContainer = [styles.imageContainer, horizontal ? styles.horizontalStyles : styles.verticalStyles, styles.shadow];\n      return React.createElement(Block, {\n        row: horizontal,\n        card: true,\n        flex: true,\n        style: cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return navigation.navigate('Pro');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        style: imgContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: imageStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }))), React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return navigation.navigate('Pro');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        space: \"between\",\n        style: styles.cardDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        size: 14,\n        style: styles.cardTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, item.title), React.createElement(Text, {\n        size: 12,\n        muted: !ctaColor,\n        color: ctaColor || argonTheme.COLORS.ACTIVE,\n        bold: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, item.cta))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.propTypes = {\n  item: PropTypes.object,\n  horizontal: PropTypes.bool,\n  full: PropTypes.bool,\n  ctaColor: PropTypes.string,\n  imageStyle: PropTypes.any\n};\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.COLORS.WHITE,\n    marginVertical: theme.SIZES.BASE,\n    borderWidth: 0,\n    minHeight: 114,\n    marginBottom: 16\n  },\n  cardTitle: {\n    flex: 1,\n    flexWrap: 'wrap',\n    paddingBottom: 6\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 2\n  },\n  imageContainer: {\n    borderRadius: 3,\n    elevation: 1,\n    overflow: 'hidden'\n  },\n  image: {},\n  horizontalImage: {\n    height: 122,\n    width: 'auto'\n  },\n  horizontalStyles: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  verticalStyles: {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullImage: {\n    height: 215\n  },\n  shadow: {\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2\n  }\n});\nexport default withNavigation(Card);","map":{"version":3,"sources":["C:/DEV/argon-react-native-master/argon-react-native-master/components/Card.js"],"names":["React","withNavigation","PropTypes","Block","Text","theme","argonTheme","Card","props","navigation","item","horizontal","full","style","ctaColor","imageStyle","imageStyles","styles","fullImage","horizontalImage","cardContainer","card","shadow","imgContainer","imageContainer","horizontalStyles","verticalStyles","navigate","uri","image","cardDescription","cardTitle","title","COLORS","ACTIVE","cta","Component","propTypes","object","bool","string","any","StyleSheet","create","backgroundColor","WHITE","marginVertical","SIZES","BASE","borderWidth","minHeight","marginBottom","flex","flexWrap","paddingBottom","padding","borderRadius","elevation","overflow","height","width","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAmC,iBAAnC;AAEA,SAASC,UAAT;;IAGMC,I;;;;;;;;;;;;;WACJ,kBAAS;AAAA,wBACqE,KAAKC,KAD1E;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,IADb,eACaA,IADb;AAAA,UACmBC,UADnB,eACmBA,UADnB;AAAA,UAC+BC,IAD/B,eAC+BA,IAD/B;AAAA,UACqCC,KADrC,eACqCA,KADrC;AAAA,UAC4CC,QAD5C,eAC4CA,QAD5C;AAAA,UACsDC,UADtD,eACsDA,UADtD;AAGP,UAAMC,WAAW,GAAG,CAClBJ,IAAI,GAAGK,MAAM,CAACC,SAAV,GAAsBD,MAAM,CAACE,eADf,EAElBJ,UAFkB,CAApB;AAIA,UAAMK,aAAa,GAAG,CAACH,MAAM,CAACI,IAAR,EAAcJ,MAAM,CAACK,MAArB,EAA6BT,KAA7B,CAAtB;AACA,UAAMU,YAAY,GAAG,CAACN,MAAM,CAACO,cAAR,EACnBb,UAAU,GAAGM,MAAM,CAACQ,gBAAV,GAA6BR,MAAM,CAACS,cAD3B,EAEnBT,MAAM,CAACK,MAFY,CAArB;AAKA,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEX,UAAZ;AAAwB,QAAA,IAAI,MAA5B;AAA6B,QAAA,IAAI,MAAjC;AAAkC,QAAA,KAAK,EAAES,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACkB,QAAX,CAAoB,KAApB,CAAN;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAEJ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACK,UAAAA,GAAG,EAAElB,IAAI,CAACmB;AAAX,SAAf;AAAkC,QAAA,KAAK,EAAEb,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAE;AAAA,iBAAMP,UAAU,CAACkB,QAAX,CAAoB,KAApB,CAAN;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,KAAK,EAAEV,MAAM,CAACa,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB,QAAA,KAAK,EAAEb,MAAM,CAACc,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CrB,IAAI,CAACsB,KAA/C,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB,QAAA,KAAK,EAAE,CAAClB,QAAxB;AAAkC,QAAA,KAAK,EAAEA,QAAQ,IAAIR,UAAU,CAAC2B,MAAX,CAAkBC,MAAvE;AAA+E,QAAA,IAAI,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqFxB,IAAI,CAACyB,GAA1F,CAFF,CADF,CANF,CADF;AAeD;;;;EA7BgBnC,KAAK,CAACoC,S;;AAgCzB7B,IAAI,CAAC8B,SAAL,GAAiB;AACf3B,EAAAA,IAAI,EAAER,SAAS,CAACoC,MADD;AAEf3B,EAAAA,UAAU,EAAET,SAAS,CAACqC,IAFP;AAGf3B,EAAAA,IAAI,EAAEV,SAAS,CAACqC,IAHD;AAIfzB,EAAAA,QAAQ,EAAEZ,SAAS,CAACsC,MAJL;AAKfzB,EAAAA,UAAU,EAAEb,SAAS,CAACuC;AALP,CAAjB;AAQA,IAAMxB,MAAM,GAAGyB,UAAU,CAACC,MAAX,CAAkB;AAC/BtB,EAAAA,IAAI,EAAE;AACJuB,IAAAA,eAAe,EAAEvC,KAAK,CAAC4B,MAAN,CAAaY,KAD1B;AAEJC,IAAAA,cAAc,EAAEzC,KAAK,CAAC0C,KAAN,CAAYC,IAFxB;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,SAAS,EAAE,GAJP;AAKJC,IAAAA,YAAY,EAAE;AALV,GADyB;AAQ/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE,MAFD;AAGTC,IAAAA,aAAa,EAAE;AAHN,GARoB;AAa/BxB,EAAAA,eAAe,EAAE;AACfyB,IAAAA,OAAO,EAAElD,KAAK,CAAC0C,KAAN,CAAYC,IAAZ,GAAmB;AADb,GAbc;AAgB/BxB,EAAAA,cAAc,EAAE;AACdgC,IAAAA,YAAY,EAAE,CADA;AAEdC,IAAAA,SAAS,EAAE,CAFG;AAGdC,IAAAA,QAAQ,EAAE;AAHI,GAhBe;AAqB/B7B,EAAAA,KAAK,EAAE,EArBwB;AAwB/BV,EAAAA,eAAe,EAAE;AACfwC,IAAAA,MAAM,EAAE,GADO;AAEfC,IAAAA,KAAK,EAAE;AAFQ,GAxBc;AA4B/BnC,EAAAA,gBAAgB,EAAE;AAChBoC,IAAAA,oBAAoB,EAAE,CADN;AAEhBC,IAAAA,uBAAuB,EAAE;AAFT,GA5Ba;AAgC/BpC,EAAAA,cAAc,EAAE;AACdoC,IAAAA,uBAAuB,EAAE,CADX;AAEdC,IAAAA,sBAAsB,EAAE;AAFV,GAhCe;AAoC/B7C,EAAAA,SAAS,EAAE;AACTyC,IAAAA,MAAM,EAAE;AADC,GApCoB;AAuC/BrC,EAAAA,MAAM,EAAE;AACN0C,IAAAA,WAAW,EAAE3D,KAAK,CAAC4B,MAAN,CAAagC,KADpB;AAENC,IAAAA,YAAY,EAAE;AAAEN,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,MAAM,EAAE;AAApB,KAFR;AAGNQ,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE,GAJT;AAKNX,IAAAA,SAAS,EAAE;AALL;AAvCuB,CAAlB,CAAf;AAgDA,eAAexD,cAAc,CAACM,IAAD,CAA7B","sourcesContent":["import React from 'react';\nimport { withNavigation } from '@react-navigation/compat';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Dimensions, Image, TouchableWithoutFeedback } from 'react-native';\nimport { Block, Text, theme } from 'galio-framework';\n\nimport { argonTheme } from '../constants';\n\n\nclass Card extends React.Component {\n  render() {\n    const { navigation, item, horizontal, full, style, ctaColor, imageStyle } = this.props;\n    \n    const imageStyles = [\n      full ? styles.fullImage : styles.horizontalImage,\n      imageStyle\n    ];\n    const cardContainer = [styles.card, styles.shadow, style];\n    const imgContainer = [styles.imageContainer,\n      horizontal ? styles.horizontalStyles : styles.verticalStyles,\n      styles.shadow\n    ];\n\n    return (\n      <Block row={horizontal} card flex style={cardContainer}>\n        <TouchableWithoutFeedback onPress={() => navigation.navigate('Pro')}>\n          <Block flex style={imgContainer}>\n            <Image source={{uri: item.image}} style={imageStyles} />\n          </Block>\n        </TouchableWithoutFeedback>\n        <TouchableWithoutFeedback onPress={() => navigation.navigate('Pro')}>\n          <Block flex space=\"between\" style={styles.cardDescription}>\n            <Text size={14} style={styles.cardTitle}>{item.title}</Text>\n            <Text size={12} muted={!ctaColor} color={ctaColor || argonTheme.COLORS.ACTIVE} bold>{item.cta}</Text>\n          </Block>\n        </TouchableWithoutFeedback>\n      </Block>\n    );\n  }\n}\n\nCard.propTypes = {\n  item: PropTypes.object,\n  horizontal: PropTypes.bool,\n  full: PropTypes.bool,\n  ctaColor: PropTypes.string,\n  imageStyle: PropTypes.any,\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.COLORS.WHITE,\n    marginVertical: theme.SIZES.BASE,\n    borderWidth: 0,\n    minHeight: 114,\n    marginBottom: 16\n  },\n  cardTitle: {\n    flex: 1,\n    flexWrap: 'wrap',\n    paddingBottom: 6\n  },\n  cardDescription: {\n    padding: theme.SIZES.BASE / 2\n  },\n  imageContainer: {\n    borderRadius: 3,\n    elevation: 1,\n    overflow: 'hidden',\n  },\n  image: {\n    // borderRadius: 3,\n  },\n  horizontalImage: {\n    height: 122,\n    width: 'auto',\n  },\n  horizontalStyles: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  verticalStyles: {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullImage: {\n    height: 215\n  },\n  shadow: {\n    shadowColor: theme.COLORS.BLACK,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2,\n  },\n});\n\nexport default withNavigation(Card);"]},"metadata":{},"sourceType":"module"}