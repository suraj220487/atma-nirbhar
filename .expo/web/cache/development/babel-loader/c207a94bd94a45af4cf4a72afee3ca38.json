{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\DEV\\\\argon-react-native-master\\\\argon-react-native-master\\\\components\\\\Select.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { Block, Text } from 'galio-framework';\nimport Icon from \"./Icon\";\nimport { argonTheme } from \"../constants\";\n\nvar DropDown = function (_React$Component) {\n  _inherits(DropDown, _React$Component);\n\n  var _super = _createSuper(DropDown);\n\n  function DropDown() {\n    var _this;\n\n    _classCallCheck(this, DropDown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      value: 1\n    };\n\n    _this.handleOnSelect = function (index, value) {\n      var onSelect = _this.props.onSelect;\n\n      _this.setState({\n        value: value\n      });\n\n      onSelect && onSelect(index, value);\n    };\n\n    return _this;\n  }\n\n  _createClass(DropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onSelect = _this$props.onSelect,\n          iconName = _this$props.iconName,\n          iconFamily = _this$props.iconFamily,\n          iconSize = _this$props.iconSize,\n          iconColor = _this$props.iconColor,\n          color = _this$props.color,\n          textStyle = _this$props.textStyle,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"onSelect\", \"iconName\", \"iconFamily\", \"iconSize\", \"iconColor\", \"color\", \"textStyle\", \"style\"]);\n\n      var modalStyles = [styles.qty, color && {\n        backgroundColor: color\n      }, style];\n      var textStyles = [styles.text, textStyle];\n      return React.createElement(ModalDropdown, _extends({\n        style: modalStyles,\n        onSelect: this.handleOnSelect,\n        dropdownStyle: styles.dropdown,\n        dropdownTextStyle: {\n          paddingLeft: 16,\n          fontSize: 12\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }), React.createElement(Block, {\n        flex: true,\n        row: true,\n        middle: true,\n        space: \"between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        size: 12,\n        style: textStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, this.state.value), React.createElement(Icon, {\n        name: iconName || \"nav-down\",\n        family: iconFamily || \"ArgonExtra\",\n        size: iconSize || 10,\n        color: iconColor || argonTheme.COLORS.WHITE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return DropDown;\n}(React.Component);\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func,\n  iconName: PropTypes.string,\n  iconFamily: PropTypes.string,\n  iconSize: PropTypes.number,\n  color: PropTypes.string,\n  textStyle: PropTypes.any\n};\nvar styles = StyleSheet.create({\n  qty: {\n    width: 100,\n    backgroundColor: argonTheme.COLORS.DEFAULT,\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom: 9.5,\n    borderRadius: 4,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 1\n  },\n  text: {\n    color: argonTheme.COLORS.WHITE,\n    fontWeight: '600'\n  },\n  dropdown: {\n    marginTop: 8,\n    marginLeft: -16,\n    width: 100\n  }\n});\nexport default DropDown;","map":{"version":3,"sources":["C:/DEV/argon-react-native-master/argon-react-native-master/components/Select.js"],"names":["React","PropTypes","ModalDropdown","Block","Text","Icon","argonTheme","DropDown","state","value","handleOnSelect","index","onSelect","props","setState","iconName","iconFamily","iconSize","iconColor","color","textStyle","style","modalStyles","styles","qty","backgroundColor","textStyles","text","dropdown","paddingLeft","fontSize","COLORS","WHITE","Component","propTypes","func","string","number","any","StyleSheet","create","width","DEFAULT","paddingHorizontal","paddingTop","paddingBottom","borderRadius","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","fontWeight","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { Block, Text } from 'galio-framework';\n\nimport Icon from './Icon';\nimport { argonTheme } from '../constants';\n\nclass DropDown extends React.Component {\n  state = {\n    value: 1,\n  }\n\n  handleOnSelect = (index, value) => {\n    const { onSelect } = this.props;\n\n    this.setState({ value: value });\n    onSelect && onSelect(index, value);\n  }\n\n  render() {\n    const { onSelect, iconName, iconFamily, iconSize, iconColor, color, textStyle, style, ...props } = this.props;\n\n    const modalStyles = [\n      styles.qty,\n      color && { backgroundColor: color },\n      style\n    ];\n\n    const textStyles = [\n      styles.text,\n      textStyle\n    ];\n\n    return (\n      <ModalDropdown\n        style={modalStyles}\n        onSelect={this.handleOnSelect}\n        dropdownStyle={styles.dropdown}\n        dropdownTextStyle={{paddingLeft:16, fontSize:12}}\n        {...props}>\n        <Block flex row middle space=\"between\">\n          <Text size={12} style={textStyles}>{this.state.value}</Text>\n          <Icon name={iconName || \"nav-down\"} family={iconFamily || \"ArgonExtra\"} size={iconSize || 10} color={iconColor || argonTheme.COLORS.WHITE} />\n        </Block>\n      </ModalDropdown>\n    )\n  }\n}\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func,\n  iconName: PropTypes.string,\n  iconFamily: PropTypes.string,\n  iconSize: PropTypes.number,\n  color: PropTypes.string,\n  textStyle: PropTypes.any,\n};\n\nconst styles = StyleSheet.create({\n  qty: {\n    width: 100,\n    backgroundColor: argonTheme.COLORS.DEFAULT,\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom:9.5,\n    borderRadius: 4,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    shadowOpacity: 1,\n  },\n  text: {\n    color: argonTheme.COLORS.WHITE,\n    fontWeight: '600'\n  },\n  dropdown: {\n    marginTop: 8,\n    marginLeft: -16,\n    width: 100,\n  },\n});\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}