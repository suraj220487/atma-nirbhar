{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StackActions } from '@react-navigation/native';\nexport function reset() {\n  throw new Error('The legacy `reset` action is not supported. Use the new reset API by accessing the original navigation object at `navigation.original`.');\n}\nexport function replace(_ref) {\n  var routeName = _ref.routeName,\n      params = _ref.params,\n      key = _ref.key,\n      newKey = _ref.newKey,\n      action = _ref.action;\n\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `replace`. Remove the `action` key from the options.');\n  }\n\n  return _objectSpread({\n    type: 'REPLACE',\n    payload: {\n      name: routeName,\n      key: newKey,\n      params: params\n    }\n  }, key !== undefined ? {\n    source: key\n  } : null);\n}\nexport function push(_ref2) {\n  var routeName = _ref2.routeName,\n      params = _ref2.params,\n      action = _ref2.action;\n\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `push`. Remove the `action` key from the options.');\n  }\n\n  return StackActions.push(routeName, params);\n}\nexport function pop(_ref3) {\n  var _ref3$n = _ref3.n,\n      n = _ref3$n === void 0 ? 1 : _ref3$n;\n  return StackActions.pop(n);\n}\nexport function popToTop() {\n  return StackActions.popToTop();\n}\nexport function dismiss() {\n  throw new Error('The legacy `dismiss` action is not supported.');\n}","map":{"version":3,"sources":["StackActions.tsx"],"names":["action","type","payload","name","key","params","source","StackActions","n"],"mappings":";;;;;;AAAA,SAAA,YAAA,QAAA,0BAAA;AAMA,OAAO,SAAA,KAAA,GAAuC;AAC5C,QAAM,IAAA,KAAA,CAAN,yIAAM,CAAN;AAGD;AAED,OAAO,SAAA,OAAA,OAYa;AAAA,MAZI,SAYJ,QAZI,SAYJ;AAAA,MAZI,MAYJ,QAZI,MAYJ;AAAA,MAZI,GAYJ,QAZI,GAYJ;AAAA,MAZI,MAYJ,QAZI,MAYJ;AAAA,MAPlBA,MAOkB,QAPlBA,MAOkB;;AAClB,MAAIA,MAAM,KAAV,SAAA,EAA0B;AACxB,UAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AAGD;;AAED;AACEC,IAAAA,IAAI,EADC,SAAP;AAEEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EADG,SAAA;AAEPC,MAAAA,GAAG,EAFI,MAAA;AAGPC,MAAAA,MAAAA,EAAAA;AAHO;AAFX,KAOM,GAAG,KAAH,SAAA,GAAoB;AAAEC,IAAAA,MAAM,EAAEF;AAAV,GAApB,GAAJ,IAPF;AASD;AAED,OAAO,SAAA,IAAA,QAQa;AAAA,MARC,SAQD,SARC,SAQD;AAAA,MARC,MAQD,SARC,MAQD;AAAA,MALlBJ,MAKkB,SALlBA,MAKkB;;AAClB,MAAIA,MAAM,KAAV,SAAA,EAA0B;AACxB,UAAM,IAAA,KAAA,CAAN,qFAAM,CAAN;AAGD;;AAED,SAAOO,YAAY,CAAZA,IAAAA,CAAAA,SAAAA,EAAP,MAAOA,CAAP;AACD;AAED,OAAO,SAAA,GAAA,QAAwD;AAAA,sBAAzCC,CAAyC;AAAA,MAAzCA,CAAyC,wBAArC,CAAqC;AAC7D,SAAOD,YAAY,CAAZA,GAAAA,CAAP,CAAOA,CAAP;AACD;AAED,OAAO,SAAA,QAAA,GAAqC;AAC1C,SAAOA,YAAY,CAAnB,QAAOA,EAAP;AACD;AAED,OAAO,SAAA,OAAA,GAAyC;AAC9C,QAAM,IAAA,KAAA,CAAN,+CAAM,CAAN;AACD","sourcesContent":["import {\n  CommonActions,\n  StackActions,\n  StackActionType,\n} from '@react-navigation/native';\n\nexport function reset(): CommonActions.Action {\n  throw new Error(\n    'The legacy `reset` action is not supported. Use the new reset API by accessing the original navigation object at `navigation.original`.'\n  );\n}\n\nexport function replace({\n  routeName,\n  params,\n  key,\n  newKey,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  key?: string;\n  newKey?: string;\n  action?: never;\n}): StackActionType {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `replace`. Remove the `action` key from the options.'\n    );\n  }\n\n  return {\n    type: 'REPLACE',\n    payload: {\n      name: routeName,\n      key: newKey,\n      params,\n    },\n    ...(key !== undefined ? { source: key } : null),\n  };\n}\n\nexport function push({\n  routeName,\n  params,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  action?: never;\n}): StackActionType {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `push`. Remove the `action` key from the options.'\n    );\n  }\n\n  return StackActions.push(routeName, params);\n}\n\nexport function pop({ n = 1 }: { n: number }): StackActionType {\n  return StackActions.pop(n);\n}\n\nexport function popToTop(): StackActionType {\n  return StackActions.popToTop();\n}\n\nexport function dismiss(): CommonActions.Action {\n  throw new Error('The legacy `dismiss` action is not supported.');\n}\n"]},"metadata":{},"sourceType":"module"}