{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\DEV\\\\argon-react-native-master\\\\argon-react-native-master\\\\node_modules\\\\react-native-modal-dropdown\\\\components\\\\ModalDropdown.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nvar TOUCHABLE_ELEMENTS = ['TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'TouchableNativeFeedback'];\n\nvar ModalDropdown = function (_Component) {\n  _inherits(ModalDropdown, _Component);\n\n  var _super = _createSuper(ModalDropdown);\n\n  function ModalDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, ModalDropdown);\n\n    _this = _super.call(this, props);\n\n    _this._onButtonPress = function () {\n      var onDropdownWillShow = _this.props.onDropdownWillShow;\n\n      if (!onDropdownWillShow || onDropdownWillShow() !== false) {\n        _this.show();\n      }\n    };\n\n    _this._onRequestClose = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._onModalPress = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._renderLoading = function () {\n      return React.createElement(ActivityIndicator, {\n        size: \"small\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          separators = _ref.separators;\n      var _this$props = _this.props,\n          renderRow = _this$props.renderRow,\n          renderRowComponent = _this$props.renderRowComponent,\n          renderRowProps = _this$props.renderRowProps,\n          dropdownTextStyle = _this$props.dropdownTextStyle,\n          dropdownTextHighlightStyle = _this$props.dropdownTextHighlightStyle,\n          accessible = _this$props.accessible,\n          dropdownTextProps = _this$props.dropdownTextProps,\n          renderRowText = _this$props.renderRowText;\n      var RowTouchable = renderRowComponent;\n      var selectedIndex = _this.state.selectedIndex;\n      var key = \"row_\" + index;\n      var highlighted = index === selectedIndex;\n      var value = renderRowText && renderRowText(item) || item.toString();\n      var row = !renderRow ? React.createElement(Text, _extends({\n        style: [styles.rowText, dropdownTextStyle, highlighted && styles.highlightedRowText, highlighted && dropdownTextHighlightStyle]\n      }, dropdownTextProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }\n      }), value) : renderRow(item, index, highlighted);\n\n      var touchableProps = _objectSpread({\n        key: key,\n        accessible: accessible,\n        onPress: function onPress() {\n          return _this._onRowPress(item, index, separators);\n        }\n      }, renderRowProps);\n\n      return React.createElement(RowTouchable, _extends({}, touchableProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 12\n        }\n      }), row);\n    };\n\n    _this._renderSeparator = function (_ref2) {\n      var _ref2$leadingItem = _ref2.leadingItem,\n          leadingItem = _ref2$leadingItem === void 0 ? '' : _ref2$leadingItem;\n      var key = \"spr_\" + leadingItem;\n      return React.createElement(View, {\n        style: styles.separator,\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this._button = null;\n    _this._buttonFrame = null;\n    _this.state = {\n      accessible: !!props.accessible,\n      loading: !props.options,\n      showDropdown: false,\n      buttonText: props.defaultValue,\n      selectedIndex: props.defaultIndex\n    };\n    return _this;\n  }\n\n  _createClass(ModalDropdown, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }), this._renderButton(), this._renderModal());\n    }\n  }, {\n    key: \"_updatePosition\",\n    value: function _updatePosition(callback) {\n      var _this2 = this;\n\n      if (this._button && this._button.measure) {\n        this._button.measure(function (fx, fy, width, height, px, py) {\n          _this2._buttonFrame = {\n            x: px,\n            y: py,\n            w: width,\n            h: height\n          };\n          callback && callback();\n        });\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this3 = this;\n\n      this._updatePosition(function () {\n        _this3.setState({\n          showDropdown: true\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        showDropdown: false\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(idx) {\n      var _this$props2 = this.props,\n          defaultValue = _this$props2.defaultValue,\n          options = _this$props2.options,\n          defaultIndex = _this$props2.defaultIndex,\n          renderButtonText = _this$props2.renderButtonText;\n      var value = defaultValue;\n\n      if (idx == null || !options || idx >= options.length) {\n        idx = defaultIndex;\n      }\n\n      if (idx >= 0) {\n        value = renderButtonText ? renderButtonText(options[idx]) : options[idx].toString();\n      }\n\n      this.setState({\n        buttonText: value,\n        selectedIndex: idx\n      });\n    }\n  }, {\n    key: \"_renderButton\",\n    value: function _renderButton() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          disabled = _this$props3.disabled,\n          accessible = _this$props3.accessible,\n          children = _this$props3.children,\n          textStyle = _this$props3.textStyle,\n          defaultTextStyle = _this$props3.defaultTextStyle,\n          renderButtonComponent = _this$props3.renderButtonComponent,\n          renderButtonProps = _this$props3.renderButtonProps,\n          renderRightComponent = _this$props3.renderRightComponent;\n      var ButtonTouchable = renderButtonComponent;\n      var RightComponent = renderRightComponent;\n      var _this$state = this.state,\n          buttonText = _this$state.buttonText,\n          selectedIndex = _this$state.selectedIndex;\n      var buttonTextStyle = selectedIndex < 0 ? [textStyle, defaultTextStyle] : textStyle;\n      return React.createElement(ButtonTouchable, _extends({\n        ref: function ref(button) {\n          return _this4._button = button;\n        },\n        disabled: disabled,\n        accessible: accessible,\n        onPress: this._onButtonPress\n      }, renderButtonProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }\n      }), children || React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, buttonTextStyle],\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, buttonText), React.createElement(RightComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      })));\n    }\n  }, {\n    key: \"_renderModal\",\n    value: function _renderModal() {\n      var _this$props4 = this.props,\n          animated = _this$props4.animated,\n          accessible = _this$props4.accessible,\n          dropdownStyle = _this$props4.dropdownStyle;\n      var _this$state2 = this.state,\n          showDropdown = _this$state2.showDropdown,\n          loading = _this$state2.loading;\n\n      if (showDropdown && this._buttonFrame) {\n        var frameStyle = this._calcPosition();\n\n        var animationType = animated ? 'fade' : 'none';\n        return React.createElement(Modal, {\n          animationType: animationType,\n          visible: true,\n          transparent: true,\n          onRequestClose: this._onRequestClose,\n          supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableWithoutFeedback, {\n          accessible: accessible,\n          disabled: !showDropdown,\n          onPress: this._onModalPress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.modal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: [styles.dropdown, dropdownStyle, frameStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }\n        }, loading ? this._renderLoading() : this._renderDropdown()))));\n      }\n    }\n  }, {\n    key: \"_calcPosition\",\n    value: function _calcPosition() {\n      var _this$props5 = this.props,\n          dropdownStyle = _this$props5.dropdownStyle,\n          style = _this$props5.style,\n          adjustFrame = _this$props5.adjustFrame,\n          isFullWidth = _this$props5.isFullWidth;\n      var dimensions = Dimensions.get('window');\n      var windowWidth = dimensions.width;\n      var windowHeight = dimensions.height;\n      var dropdownHeight = dropdownStyle && StyleSheet.flatten(dropdownStyle).height || StyleSheet.flatten(styles.dropdown).height;\n      var bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;\n      var rightSpace = windowWidth - this._buttonFrame.x;\n      var showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\n      var showInLeft = rightSpace >= this._buttonFrame.x;\n      var positionStyle = {\n        height: dropdownHeight,\n        top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight)\n      };\n\n      if (showInLeft) {\n        positionStyle.left = this._buttonFrame.x;\n\n        if (isFullWidth) {\n          positionStyle.right = rightSpace - this._buttonFrame.w;\n        }\n      } else {\n        var dropdownWidth = dropdownStyle && StyleSheet.flatten(dropdownStyle).width || style && StyleSheet.flatten(style).width || -1;\n\n        if (dropdownWidth !== -1) {\n          positionStyle.width = dropdownWidth;\n        }\n\n        positionStyle.right = rightSpace - this._buttonFrame.w;\n      }\n\n      return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\n    }\n  }, {\n    key: \"_renderDropdown\",\n    value: function _renderDropdown() {\n      var _this$props6 = this.props,\n          scrollEnabled = _this$props6.scrollEnabled,\n          renderSeparator = _this$props6.renderSeparator,\n          showsVerticalScrollIndicator = _this$props6.showsVerticalScrollIndicator,\n          keyboardShouldPersistTaps = _this$props6.keyboardShouldPersistTaps,\n          options = _this$props6.options,\n          dropdownListProps = _this$props6.dropdownListProps;\n      return React.createElement(FlatList, _extends({}, dropdownListProps, {\n        data: options,\n        scrollEnabled: scrollEnabled,\n        style: styles.list,\n        keyExtractor: function keyExtractor(item, i) {\n          return \"key-\" + i;\n        },\n        renderItem: this._renderItem,\n        ItemSeparatorComponent: renderSeparator || this._renderSeparator,\n        automaticallyAdjustContentInsets: false,\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"_onRowPress\",\n    value: function _onRowPress(rowData, rowID, highlightRow) {\n      var _this$props7 = this.props,\n          onSelect = _this$props7.onSelect,\n          renderButtonText = _this$props7.renderButtonText,\n          onDropdownWillHide = _this$props7.onDropdownWillHide,\n          multipleSelect = _this$props7.multipleSelect;\n\n      if (!onSelect || onSelect(rowID, rowData) !== false) {\n        var value = renderButtonText && renderButtonText(rowData) || rowData.toString();\n        this.setState({\n          buttonText: value,\n          selectedIndex: rowID\n        });\n      }\n\n      if (!multipleSelect && (!onDropdownWillHide || onDropdownWillHide() !== false)) {\n        this.setState({\n          showDropdown: false\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      var selectedIndex = state.selectedIndex,\n          loading = state.loading;\n      var defaultIndex = nextProps.defaultIndex,\n          defaultValue = nextProps.defaultValue,\n          options = nextProps.options;\n      var newState = null;\n\n      if (selectedIndex < 0) {\n        selectedIndex = defaultIndex;\n        newState = {\n          selectedIndex: selectedIndex\n        };\n\n        if (selectedIndex < 0) {\n          newState.buttonText = defaultValue;\n        }\n      }\n\n      if (!loading !== !options) {\n        if (!newState) {\n          newState = {};\n        }\n\n        newState.loading = !options;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return ModalDropdown;\n}(Component);\n\nModalDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  defaultValue: PropTypes.string,\n  options: PropTypes.array.isRequired,\n  accessible: PropTypes.bool,\n  animated: PropTypes.bool,\n  isFullWidth: PropTypes.bool,\n  showsVerticalScrollIndicator: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  defaultTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextHighlightStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownListProps: PropTypes.object,\n  dropdownTextProps: PropTypes.object,\n  adjustFrame: PropTypes.func,\n  renderRow: PropTypes.func,\n  renderRowComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderRowProps: PropTypes.object,\n  renderSeparator: PropTypes.func,\n  renderButtonText: PropTypes.func,\n  renderRowText: PropTypes.func,\n  renderButtonComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderRightComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderButtonProps: PropTypes.object,\n  onDropdownWillShow: PropTypes.func,\n  onDropdownWillHide: PropTypes.func,\n  onSelect: PropTypes.func\n};\nModalDropdown.defaultProps = {\n  disabled: false,\n  multipleSelect: false,\n  scrollEnabled: true,\n  defaultIndex: -1,\n  defaultValue: 'Please select...',\n  animated: true,\n  isFullWidth: false,\n  showsVerticalScrollIndicator: true,\n  keyboardShouldPersistTaps: 'never',\n  renderRowComponent: Platform.OS === 'ios' ? TouchableOpacity : TouchableHighlight,\n  renderButtonComponent: TouchableOpacity,\n  renderRightComponent: View\n};\nexport { ModalDropdown as default };\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 12\n  },\n  modal: {\n    flexGrow: 1\n  },\n  dropdown: {\n    position: 'absolute',\n    height: (33 + StyleSheet.hairlineWidth) * 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'lightgray',\n    borderRadius: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  loading: {\n    alignSelf: 'center'\n  },\n  list: {},\n  rowText: {\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n    fontSize: 11,\n    color: 'gray',\n    backgroundColor: 'white',\n    textAlignVertical: 'center'\n  },\n  highlightedRowText: {\n    color: 'black'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: 'lightgray'\n  }\n});","map":{"version":3,"sources":["C:/DEV/argon-react-native-master/argon-react-native-master/node_modules/react-native-modal-dropdown/components/ModalDropdown.js"],"names":["React","Component","PropTypes","TOUCHABLE_ELEMENTS","ModalDropdown","props","_onButtonPress","onDropdownWillShow","show","_onRequestClose","onDropdownWillHide","hide","_onModalPress","_renderLoading","_renderItem","item","index","separators","renderRow","renderRowComponent","renderRowProps","dropdownTextStyle","dropdownTextHighlightStyle","accessible","dropdownTextProps","renderRowText","RowTouchable","selectedIndex","state","key","highlighted","value","toString","row","styles","rowText","highlightedRowText","touchableProps","onPress","_onRowPress","_renderSeparator","leadingItem","separator","_button","_buttonFrame","loading","options","showDropdown","buttonText","defaultValue","defaultIndex","_renderButton","_renderModal","callback","measure","fx","fy","width","height","px","py","x","y","w","h","_updatePosition","setState","idx","renderButtonText","length","disabled","children","textStyle","defaultTextStyle","renderButtonComponent","renderButtonProps","renderRightComponent","ButtonTouchable","RightComponent","buttonTextStyle","button","animated","dropdownStyle","frameStyle","_calcPosition","animationType","modal","dropdown","_renderDropdown","style","adjustFrame","isFullWidth","dimensions","Dimensions","get","windowWidth","windowHeight","dropdownHeight","StyleSheet","flatten","bottomSpace","rightSpace","showInBottom","showInLeft","positionStyle","top","Math","max","left","right","dropdownWidth","scrollEnabled","renderSeparator","showsVerticalScrollIndicator","keyboardShouldPersistTaps","dropdownListProps","list","i","rowData","rowID","highlightRow","onSelect","multipleSelect","nextProps","newState","propTypes","bool","number","string","array","isRequired","oneOfType","object","func","defaultProps","Platform","OS","TouchableOpacity","TouchableHighlight","View","create","flexDirection","alignItems","fontSize","flexGrow","position","hairlineWidth","borderWidth","borderColor","borderRadius","backgroundColor","justifyContent","alignSelf","paddingHorizontal","paddingVertical","color","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Dimensions,\r\n  View,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  Modal,\r\n  ActivityIndicator,\r\n  FlatList,\r\n  Platform\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TOUCHABLE_ELEMENTS = [\r\n  'TouchableHighlight',\r\n  'TouchableOpacity',\r\n  'TouchableWithoutFeedback',\r\n  'TouchableNativeFeedback',\r\n];\r\n\r\nexport default class ModalDropdown extends Component {\r\n  static propTypes = {\r\n    disabled: PropTypes.bool,\r\n    multipleSelect: PropTypes.bool,\r\n    scrollEnabled: PropTypes.bool,\r\n    defaultIndex: PropTypes.number,\r\n    defaultValue: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    accessible: PropTypes.bool,\r\n    animated: PropTypes.bool,\r\n    isFullWidth: PropTypes.bool,\r\n    showsVerticalScrollIndicator: PropTypes.bool,\r\n    keyboardShouldPersistTaps: PropTypes.string,\r\n    style: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    textStyle: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    defaultTextStyle: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    dropdownStyle: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    dropdownTextStyle: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    dropdownTextHighlightStyle: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.object,\r\n      PropTypes.array,\r\n    ]),\r\n    dropdownListProps: PropTypes.object,\r\n    dropdownTextProps: PropTypes.object,\r\n    adjustFrame: PropTypes.func,\r\n    renderRow: PropTypes.func,\r\n    renderRowComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n    ]),\r\n    renderRowProps: PropTypes.object,\r\n    renderSeparator: PropTypes.func,\r\n    renderButtonText: PropTypes.func,\r\n    renderRowText: PropTypes.func,\r\n    renderButtonComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n    ]),\r\n    renderRightComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n    ]),\r\n    renderButtonProps: PropTypes.object,\r\n    onDropdownWillShow: PropTypes.func,\r\n    onDropdownWillHide: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    disabled: false,\r\n    multipleSelect: false,\r\n    scrollEnabled: true,\r\n    defaultIndex: -1,\r\n    defaultValue: 'Please select...',\r\n    animated: true,\r\n    isFullWidth: false,\r\n    showsVerticalScrollIndicator: true,\r\n    keyboardShouldPersistTaps: 'never',\r\n    renderRowComponent: Platform.OS === 'ios' ? TouchableOpacity : TouchableHighlight,\r\n    renderButtonComponent: TouchableOpacity,\r\n    renderRightComponent: View\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this._button = null;\r\n    this._buttonFrame = null;\r\n\r\n    this.state = {\r\n      accessible: !!props.accessible,\r\n      loading: !props.options,\r\n      showDropdown: false,\r\n      buttonText: props.defaultValue,\r\n      selectedIndex: props.defaultIndex,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    let {selectedIndex, loading} = state;\r\n    const {defaultIndex, defaultValue, options} = nextProps;\r\n    let newState = null;\r\n\r\n    if (selectedIndex < 0) {\r\n      selectedIndex = defaultIndex;\r\n      newState = {\r\n        selectedIndex: selectedIndex\r\n      };\r\n      if (selectedIndex < 0) {\r\n        newState.buttonText = defaultValue;\r\n      }\r\n    }\r\n\r\n    if (!loading !== !options) {\r\n      if (!newState) {\r\n        newState = {};\r\n      }\r\n      newState.loading = !options;\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View {...this.props}>\r\n        {this._renderButton()}\r\n        {this._renderModal()}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _updatePosition(callback) {\r\n    if (this._button && this._button.measure) {\r\n      this._button.measure((fx, fy, width, height, px, py) => {\r\n        this._buttonFrame = {\r\n          x: px,\r\n          y: py,\r\n          w: width,\r\n          h: height,\r\n        };\r\n        callback && callback();\r\n      });\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this._updatePosition(() => {\r\n      this.setState({\r\n        showDropdown: true,\r\n      });\r\n    });\r\n  }\r\n\r\n  hide() {\r\n    this.setState({\r\n      showDropdown: false,\r\n    });\r\n  }\r\n\r\n  select(idx) {\r\n    const {\r\n      defaultValue,\r\n      options,\r\n      defaultIndex,\r\n      renderButtonText,\r\n    } = this.props;\r\n    let value = defaultValue;\r\n\r\n    if (idx == null || !options || idx >= options.length) {\r\n      idx = defaultIndex;\r\n    }\r\n    if (idx >= 0) {\r\n      value = renderButtonText\r\n        ? renderButtonText(options[idx])\r\n        : options[idx].toString();\r\n    }\r\n\r\n    this.setState({\r\n      buttonText: value,\r\n      selectedIndex: idx,\r\n    });\r\n  }\r\n\r\n  _renderButton() {\r\n    const {\r\n      disabled,\r\n      accessible,\r\n      children,\r\n      textStyle,\r\n      defaultTextStyle,\r\n      renderButtonComponent,\r\n      renderButtonProps,\r\n      renderRightComponent\r\n    } = this.props;\r\n    const ButtonTouchable = renderButtonComponent;\r\n    const RightComponent = renderRightComponent;\r\n    const { buttonText, selectedIndex } = this.state;\r\n    const buttonTextStyle = selectedIndex < 0 ? [textStyle, defaultTextStyle] : textStyle;\r\n    return (\r\n      <ButtonTouchable\r\n        ref={button => (this._button = button)}\r\n        disabled={disabled}\r\n        accessible={accessible}\r\n        onPress={this._onButtonPress}\r\n        {...renderButtonProps}\r\n      >\r\n        {children || (\r\n          <View style={styles.button}>\r\n            <Text style={[styles.buttonText, buttonTextStyle]} numberOfLines={1}>\r\n              {buttonText}\r\n            </Text>\r\n            <RightComponent />\r\n          </View>\r\n        )}\r\n      </ButtonTouchable>\r\n    );\r\n  }\r\n\r\n  _onButtonPress = () => {\r\n    const { onDropdownWillShow } = this.props;\r\n\r\n    if (!onDropdownWillShow || onDropdownWillShow() !== false) {\r\n      this.show();\r\n    }\r\n  };\r\n\r\n  _renderModal() {\r\n    const { animated, accessible, dropdownStyle } = this.props;\r\n    const { showDropdown, loading } = this.state;\r\n\r\n    if (showDropdown && this._buttonFrame) {\r\n      const frameStyle = this._calcPosition();\r\n      const animationType = animated ? 'fade' : 'none';\r\n\r\n      return (\r\n        <Modal\r\n          animationType={animationType}\r\n          visible\r\n          transparent\r\n          onRequestClose={this._onRequestClose}\r\n          supportedOrientations={[\r\n            'portrait',\r\n            'portrait-upside-down',\r\n            'landscape',\r\n            'landscape-left',\r\n            'landscape-right',\r\n          ]}\r\n        >\r\n          <TouchableWithoutFeedback\r\n            accessible={accessible}\r\n            disabled={!showDropdown}\r\n            onPress={this._onModalPress}\r\n          >\r\n            <View style={styles.modal}>\r\n              <View style={[styles.dropdown, dropdownStyle, frameStyle]}>\r\n                {loading ? this._renderLoading() : this._renderDropdown()}\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n\r\n  _calcPosition() {\r\n    const { dropdownStyle, style, adjustFrame, isFullWidth } = this.props;\r\n    const dimensions = Dimensions.get('window');\r\n    const windowWidth = dimensions.width;\r\n    const windowHeight = dimensions.height;\r\n    const dropdownHeight =\r\n      (dropdownStyle && StyleSheet.flatten(dropdownStyle).height) ||\r\n      StyleSheet.flatten(styles.dropdown).height;\r\n    const bottomSpace =\r\n      windowHeight - this._buttonFrame.y - this._buttonFrame.h;\r\n    const rightSpace = windowWidth - this._buttonFrame.x;\r\n    const showInBottom =\r\n      bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\r\n    const showInLeft = rightSpace >= this._buttonFrame.x;\r\n    const positionStyle = {\r\n      height: dropdownHeight,\r\n      top: showInBottom\r\n        ? this._buttonFrame.y + this._buttonFrame.h\r\n        : Math.max(0, this._buttonFrame.y - dropdownHeight),\r\n    };\r\n\r\n    if (showInLeft) {\r\n      positionStyle.left = this._buttonFrame.x;\r\n      if(isFullWidth) {\r\n        positionStyle.right = rightSpace - this._buttonFrame.w;\r\n      }\r\n    } else {\r\n      const dropdownWidth =\r\n        (dropdownStyle && StyleSheet.flatten(dropdownStyle).width) ||\r\n        (style && StyleSheet.flatten(style).width) || -1;\r\n\r\n      if (dropdownWidth !== -1) {\r\n        positionStyle.width = dropdownWidth;\r\n      }\r\n\r\n      positionStyle.right = rightSpace - this._buttonFrame.w;\r\n    }\r\n\r\n    return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\r\n  }\r\n\r\n  _onRequestClose = () => {\r\n    const { onDropdownWillHide } = this.props;\r\n    if (!onDropdownWillHide || onDropdownWillHide() !== false) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  _onModalPress = () => {\r\n    const { onDropdownWillHide } = this.props;\r\n    if (!onDropdownWillHide || onDropdownWillHide() !== false) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  _renderLoading = () => {\r\n    return <ActivityIndicator size=\"small\" />;\r\n  };\r\n\r\n  _renderDropdown() {\r\n    const {\r\n      scrollEnabled,\r\n      renderSeparator,\r\n      showsVerticalScrollIndicator,\r\n      keyboardShouldPersistTaps,\r\n      options,\r\n      dropdownListProps,\r\n    } = this.props;\r\n\r\n    return (\r\n      <FlatList\r\n        {...dropdownListProps}\r\n        data={options}\r\n        scrollEnabled={scrollEnabled}\r\n        style={styles.list}\r\n        keyExtractor={(item, i) => (`key-${i}`)}\r\n        renderItem={this._renderItem}\r\n        ItemSeparatorComponent={renderSeparator || this._renderSeparator}\r\n        automaticallyAdjustContentInsets={false}\r\n        showsVerticalScrollIndicator={showsVerticalScrollIndicator}\r\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n      />\r\n    );\r\n  }\r\n\r\n  _renderItem = ({ item, index, separators }) => {\r\n    const {\r\n      renderRow,\r\n      renderRowComponent,\r\n      renderRowProps,\r\n      dropdownTextStyle,\r\n      dropdownTextHighlightStyle,\r\n      accessible,\r\n      dropdownTextProps,\r\n      renderRowText\r\n    } = this.props;\r\n    const RowTouchable = renderRowComponent;\r\n    const { selectedIndex } = this.state;\r\n    const key = `row_${index}`;\r\n    const highlighted = index === selectedIndex;\r\n    const value =\r\n        (renderRowText && renderRowText(item)) || item.toString();\r\n    const row = !renderRow ? (\r\n      <Text\r\n        style={[\r\n          styles.rowText,\r\n          dropdownTextStyle,\r\n          highlighted && styles.highlightedRowText,\r\n          highlighted && dropdownTextHighlightStyle,\r\n        ]}\r\n        {...dropdownTextProps}\r\n      >\r\n        {value}\r\n      </Text>\r\n    ) : (\r\n      renderRow(item, index, highlighted)\r\n    );\r\n\r\n    const touchableProps = {\r\n      key,\r\n      accessible,\r\n      onPress: () => this._onRowPress(item, index, separators),\r\n      ...renderRowProps\r\n    };\r\n\r\n    return <RowTouchable {...touchableProps}>{row}</RowTouchable>;\r\n  };\r\n\r\n  _onRowPress(rowData, rowID, highlightRow) {\r\n    const {\r\n      onSelect,\r\n      renderButtonText,\r\n      onDropdownWillHide,\r\n      multipleSelect\r\n    } = this.props;\r\n\r\n    if (!onSelect || onSelect(rowID, rowData) !== false) {\r\n      const value =\r\n        (renderButtonText && renderButtonText(rowData)) || rowData.toString();\r\n\r\n      this.setState({\r\n        buttonText: value,\r\n        selectedIndex: rowID,\r\n      });\r\n    }\r\n\r\n    if (!multipleSelect &&\r\n        (!onDropdownWillHide || onDropdownWillHide() !== false)\r\n       ) {\r\n      this.setState({\r\n        showDropdown: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  _renderSeparator = ({ leadingItem = '' }) => {\r\n    const key = `spr_${leadingItem}`;\r\n\r\n    return <View style={styles.separator} key={key} />;\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    // justifyContent: 'center',\r\n    flexDirection:'row',\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    fontSize: 12,\r\n  },\r\n  modal: {\r\n    flexGrow: 1,\r\n  },\r\n  dropdown: {\r\n    position: 'absolute',\r\n    height: (33 + StyleSheet.hairlineWidth) * 5,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderColor: 'lightgray',\r\n    borderRadius: 2,\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center',\r\n  },\r\n  loading: {\r\n    alignSelf: 'center',\r\n  },\r\n  list: {\r\n    // flexGrow: 1,\r\n  },\r\n  rowText: {\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 10,\r\n    fontSize: 11,\r\n    color: 'gray',\r\n    backgroundColor: 'white',\r\n    textAlignVertical: 'center',\r\n  },\r\n  highlightedRowText: {\r\n    color: 'black',\r\n  },\r\n  separator: {\r\n    height: StyleSheet.hairlineWidth,\r\n    backgroundColor: 'lightgray',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}