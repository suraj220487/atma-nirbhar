{"ast":null,"code":"import * as React from 'react';\nimport { useNavigation, useRoute, useNavigationState } from '@react-navigation/native';\nimport createCompatNavigationProp from \"./createCompatNavigationProp\";\nexport default function useCompatNavigation() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var isFirstRouteInParent = useNavigationState(function (state) {\n    return state.routes[0].key === route.key;\n  });\n  var context = React.useRef({});\n  return React.useMemo(function () {\n    return createCompatNavigationProp(navigation, route, context.current, isFirstRouteInParent);\n  }, [isFirstRouteInParent, navigation, route]);\n}","map":{"version":3,"sources":["useCompatNavigation.tsx"],"names":["navigation","useNavigation","route","useRoute","isFirstRouteInParent","useNavigationState","state","context","React","createCompatNavigationProp"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,QAAA,0BAAA;AAOA,OAAA,0BAAA;AAGA,eAAe,SAAA,mBAAA,GAEX;AACF,MAAMA,UAAU,GAAGC,aAAnB,EAAA;AACA,MAAMC,KAAK,GAAGC,QAAd,EAAA;AAEA,MAAMC,oBAAoB,GAAGC,kBAAkB,CAC5CC,UAAAA,KAAD;AAAA,WAAWA,KAAK,CAALA,MAAAA,CAAAA,CAAAA,EAAAA,GAAAA,KAAwBJ,KAAK,CAD1C,GACE;AAAA,GAD6C,CAA/C;AAIA,MAAMK,OAAO,GAAGC,KAAK,CAALA,MAAAA,CAAhB,EAAgBA,CAAhB;AAEA,SAAOA,KAAK,CAALA,OAAAA,CACL;AAAA,WACEC,0BAA0B,CAAA,UAAA,EAAA,KAAA,EAGxBF,OAAO,CAHiB,OAAA,EAFvBC,oBAEuB,CAD5B;AAAA,GADKA,EAQL,CAAA,oBAAA,EAAA,UAAA,EARF,KAQE,CARKA,CAAP;AAUD","sourcesContent":["import * as React from 'react';\nimport {\n  useNavigation,\n  useRoute,\n  NavigationProp,\n  ParamListBase,\n  useNavigationState,\n} from '@react-navigation/native';\nimport createCompatNavigationProp from './createCompatNavigationProp';\nimport type { CompatNavigationProp } from './types';\n\nexport default function useCompatNavigation<\n  T extends NavigationProp<ParamListBase>\n>() {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  const isFirstRouteInParent = useNavigationState(\n    (state) => state.routes[0].key === route.key\n  );\n\n  const context = React.useRef<Record<string, any>>({});\n\n  return React.useMemo(\n    () =>\n      createCompatNavigationProp(\n        navigation,\n        route as any,\n        context.current,\n        isFirstRouteInParent\n      ) as CompatNavigationProp<T>,\n    [isFirstRouteInParent, navigation, route]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}