{"ast":null,"code":"import * as NavigationActions from \"./NavigationActions\";\nimport * as StackActions from \"./StackActions\";\nimport * as SwitchActions from \"./SwitchActions\";\nimport * as DrawerActions from \"./DrawerActions\";\nexport function navigate(options, params, action) {\n  if (typeof options === 'string') {\n    return NavigationActions.navigate({\n      routeName: options,\n      params: params,\n      action: action\n    });\n  }\n\n  return NavigationActions.navigate(options);\n}\nexport function goBack(fromKey) {\n  return NavigationActions.back({\n    key: fromKey\n  });\n}\nexport function setParams(params) {\n  return NavigationActions.setParams({\n    params: params\n  });\n}\nexport function reset() {\n  return StackActions.reset();\n}\nexport function replace(routeName, params, action) {\n  return StackActions.replace({\n    routeName: routeName,\n    params: params,\n    action: action\n  });\n}\nexport function push(routeName, params, action) {\n  return StackActions.push({\n    routeName: routeName,\n    params: params,\n    action: action\n  });\n}\nexport function pop() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return StackActions.pop(typeof n === 'number' ? {\n    n: n\n  } : n);\n}\nexport function popToTop() {\n  return StackActions.popToTop();\n}\nexport function dismiss() {\n  return StackActions.dismiss();\n}\nexport function jumpTo(routeName) {\n  return SwitchActions.jumpTo({\n    routeName: routeName\n  });\n}\nexport function openDrawer() {\n  return DrawerActions.openDrawer();\n}\nexport function closeDrawer() {\n  return DrawerActions.closeDrawer();\n}\nexport function toggleDrawer() {\n  return DrawerActions.toggleDrawer();\n}","map":{"version":3,"sources":["helpers.tsx"],"names":["routeName","params","action","NavigationActions","key","fromKey","StackActions","n","DrawerActions"],"mappings":"AAAA,OAAO,KAAP,iBAAA;AACA,OAAO,KAAP,YAAA;AACA,OAAO,KAAP,aAAA;AACA,OAAO,KAAP,aAAA;AAcA,OAAO,SAAA,QAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAIe;AACpB,MAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAC/B,WAAO,iBAAiB,CAAjB,QAAA,CAA2B;AAChCA,MAAAA,SAAS,EADuB,OAAA;AAEhCC,MAAAA,MAFgC,EAEhCA,MAFgC;AAGhCC,MAAAA,MAAAA,EAAAA;AAHgC,KAA3B,CAAP;AAKD;;AAED,SAAOC,iBAAiB,CAAjBA,QAAAA,CAAP,OAAOA,CAAP;AACD;AAED,OAAO,SAAA,MAAA,CAAA,OAAA,EAAyC;AAC9C,SAAO,iBAAiB,CAAjB,IAAA,CAAuB;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAvB,CAAP;AACD;AAED,OAAO,SAAA,SAAA,CAAA,MAAA,EAAmC;AACxC,SAAO,iBAAiB,CAAjB,SAAA,CAA4B;AAAEJ,IAAAA,MAAAA,EAAAA;AAAF,GAA5B,CAAP;AACD;AAED,OAAO,SAAA,KAAA,GAAiB;AACtB,SAAOK,YAAY,CAAnB,KAAOA,EAAP;AACD;AAED,OAAO,SAAA,OAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAqE;AAC1E,SAAO,YAAY,CAAZ,OAAA,CAAqB;AAC1BN,IAAAA,SAD0B,EAC1BA,SAD0B;AAE1BC,IAAAA,MAF0B,EAE1BA,MAF0B;AAG1BC,IAAAA,MAAAA,EAAAA;AAH0B,GAArB,CAAP;AAKD;AAED,OAAO,SAAA,IAAA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAkE;AACvE,SAAO,YAAY,CAAZ,IAAA,CAAkB;AACvBF,IAAAA,SADuB,EACvBA,SADuB;AAEvBC,IAAAA,MAFuB,EAEvBA,MAFuB;AAGvBC,IAAAA,MAAAA,EAAAA;AAHuB,GAAlB,CAAP;AAKD;AAED,OAAO,SAAA,GAAA,GAA4B;AAAA,MAAfK,CAAe,uEAA5B,CAA4B;AACjC,SAAO,YAAY,CAAZ,GAAA,CAAiB,OAAA,CAAA,KAAA,QAAA,GAAwB;AAAEA,IAAAA,CAAAA,EAAAA;AAAF,GAAxB,GAAxB,CAAO,CAAP;AACD;AAED,OAAO,SAAA,QAAA,GAAoB;AACzB,SAAOD,YAAY,CAAnB,QAAOA,EAAP;AACD;AAED,OAAO,SAAA,OAAA,GAAmB;AACxB,SAAOA,YAAY,CAAnB,OAAOA,EAAP;AACD;AAED,OAAO,SAAA,MAAA,CAAA,SAAA,EAAmC;AACxC,SAAO,aAAa,CAAb,MAAA,CAAqB;AAAEN,IAAAA,SAAAA,EAAAA;AAAF,GAArB,CAAP;AACD;AAED,OAAO,SAAA,UAAA,GAAsB;AAC3B,SAAOQ,aAAa,CAApB,UAAOA,EAAP;AACD;AAED,OAAO,SAAA,WAAA,GAAuB;AAC5B,SAAOA,aAAa,CAApB,WAAOA,EAAP;AACD;AAED,OAAO,SAAA,YAAA,GAAwB;AAC7B,SAAOA,aAAa,CAApB,YAAOA,EAAP;AACD","sourcesContent":["import * as NavigationActions from './NavigationActions';\nimport * as StackActions from './StackActions';\nimport * as SwitchActions from './SwitchActions';\nimport * as DrawerActions from './DrawerActions';\n\ntype NavigateActionPayload = Parameters<typeof NavigationActions.navigate>['0'];\n\ntype NavigateActionType = ReturnType<typeof NavigationActions.navigate>;\n\nexport function navigate(\n  routeName: string,\n  params?: object,\n  action?: never\n): NavigateActionType;\n// eslint-disable-next-line no-redeclare\nexport function navigate(options: NavigateActionPayload): NavigateActionType;\n// eslint-disable-next-line no-redeclare\nexport function navigate(\n  options: string | NavigateActionPayload,\n  params?: object,\n  action?: never\n): NavigateActionType {\n  if (typeof options === 'string') {\n    return NavigationActions.navigate({\n      routeName: options,\n      params,\n      action,\n    });\n  }\n\n  return NavigationActions.navigate(options);\n}\n\nexport function goBack(fromKey?: null | string) {\n  return NavigationActions.back({ key: fromKey });\n}\n\nexport function setParams(params: object) {\n  return NavigationActions.setParams({ params });\n}\n\nexport function reset() {\n  return StackActions.reset();\n}\n\nexport function replace(routeName: string, params?: object, action?: never) {\n  return StackActions.replace({\n    routeName,\n    params,\n    action,\n  });\n}\n\nexport function push(routeName: string, params?: object, action?: never) {\n  return StackActions.push({\n    routeName,\n    params,\n    action,\n  });\n}\n\nexport function pop(n: number = 1) {\n  return StackActions.pop(typeof n === 'number' ? { n } : n);\n}\n\nexport function popToTop() {\n  return StackActions.popToTop();\n}\n\nexport function dismiss() {\n  return StackActions.dismiss();\n}\n\nexport function jumpTo(routeName: string) {\n  return SwitchActions.jumpTo({ routeName });\n}\n\nexport function openDrawer() {\n  return DrawerActions.openDrawer();\n}\n\nexport function closeDrawer() {\n  return DrawerActions.closeDrawer();\n}\n\nexport function toggleDrawer() {\n  return DrawerActions.toggleDrawer();\n}\n"]},"metadata":{},"sourceType":"module"}