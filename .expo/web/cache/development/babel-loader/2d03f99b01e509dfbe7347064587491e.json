{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CommonActions } from '@react-navigation/native';\nexport function navigate(_ref) {\n  var routeName = _ref.routeName,\n      params = _ref.params,\n      key = _ref.key,\n      action = _ref.action;\n\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `navigate`. Remove the `action` key from the options.');\n  }\n\n  return CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params\n  });\n}\nexport function back(options) {\n  return (options === null || options === void 0 ? void 0 : options.key) != null ? function (state) {\n    return _objectSpread(_objectSpread({}, CommonActions.goBack()), {}, {\n      source: options.key,\n      target: state.key\n    });\n  } : CommonActions.goBack();\n}\nexport function setParams(_ref2) {\n  var params = _ref2.params,\n      key = _ref2.key;\n  return _objectSpread(_objectSpread({}, CommonActions.setParams(params)), key !== undefined ? {\n    source: key\n  } : null);\n}","map":{"version":3,"sources":["NavigationActions.tsx"],"names":["action","name","key","params","state","CommonActions","source","options","target"],"mappings":";;;;;;AAAA,SAAA,aAAA,QAAA,0BAAA;AAEA,OAAO,SAAA,QAAA,OAUkB;AAAA,MAVA,SAUA,QAVA,SAUA;AAAA,MAVA,MAUA,QAVA,MAUA;AAAA,MAVA,GAUA,QAVA,GAUA;AAAA,MANvBA,MAMuB,QANvBA,MAMuB;;AACvB,MAAIA,MAAM,KAAV,SAAA,EAA0B;AACxB,UAAM,IAAA,KAAA,CAAN,yFAAM,CAAN;AAGD;;AAED,SAAO,aAAa,CAAb,QAAA,CAAuB;AAC5BC,IAAAA,IAAI,EADwB,SAAA;AAE5BC,IAAAA,GAAG,EAFyB,GAAA;AAG5BC,IAAAA,MAAM,EAAEA;AAHoB,GAAvB,CAAP;AAKD;AAED,OAAO,SAAA,IAAA,CAAA,OAAA,EAAiD;AACtD,SAAO,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAA,KAAP,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAP,GAAA,KAAA,IAAA,GACFC,UAAAA,KAAD;AAAA,2CACKC,aAAa,CADW,MACxBA,EADL;AAEEC,MAAAA,MAAM,EAAEC,OAAO,CAFY,GAA7B;AAGEC,MAAAA,MAAM,EAAEJ,KAAK,CAACF;AAHhB;AAAA,GADG,GAMHG,aAAa,CANjB,MAMIA,EANJ;AAOD;AAED,OAAO,SAAA,SAAA,QAMkB;AAAA,MANC,MAMD,SANC,MAMD;AAAA,MAJvBH,GAIuB,SAJvBA,GAIuB;AACvB,yCACKG,aAAa,CAAbA,SAAAA,CADE,MACFA,CADL,GAEM,GAAG,KAAH,SAAA,GAAoB;AAAEC,IAAAA,MAAM,EAAEJ;AAAV,GAApB,GAAJ,IAFF;AAID","sourcesContent":["import { CommonActions, NavigationState } from '@react-navigation/native';\n\nexport function navigate({\n  routeName,\n  params,\n  key,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  key?: string;\n  action?: never;\n}): CommonActions.Action {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `navigate`. Remove the `action` key from the options.'\n    );\n  }\n\n  return CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params,\n  });\n}\n\nexport function back(options?: { key?: null | string }) {\n  return options?.key != null\n    ? (state: NavigationState) => ({\n        ...CommonActions.goBack(),\n        source: options.key,\n        target: state.key,\n      })\n    : CommonActions.goBack();\n}\n\nexport function setParams({\n  params,\n  key,\n}: {\n  params: object;\n  key?: string;\n}): CommonActions.Action {\n  return {\n    ...CommonActions.setParams(params),\n    ...(key !== undefined ? { source: key } : null),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}