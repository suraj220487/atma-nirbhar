{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\DEV\\\\argon-react-native-master\\\\argon-react-native-master\\\\components\\\\Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { Button } from \"galio-framework\";\nimport argonTheme from \"../constants/Theme\";\n\nvar ArButton = function (_React$Component) {\n  _inherits(ArButton, _React$Component);\n\n  var _super = _createSuper(ArButton);\n\n  function ArButton() {\n    _classCallCheck(this, ArButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ArButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          small = _this$props.small,\n          shadowless = _this$props.shadowless,\n          children = _this$props.children,\n          color = _this$props.color,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"small\", \"shadowless\", \"children\", \"color\", \"style\"]);\n\n      var colorStyle = color && argonTheme.COLORS[color.toUpperCase()];\n      var buttonStyles = [small && styles.smallButton, color && {\n        backgroundColor: colorStyle\n      }, !shadowless && styles.shadow, _objectSpread({}, style)];\n      return React.createElement(Button, _extends({\n        style: buttonStyles,\n        shadowless: true,\n        textStyle: {\n          fontSize: 12,\n          fontWeight: '700'\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return ArButton;\n}(React.Component);\n\nArButton.propTypes = {\n  small: PropTypes.bool,\n  shadowless: PropTypes.bool,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'error', 'success', 'warning'])])\n};\nvar styles = StyleSheet.create({\n  smallButton: {\n    width: 75,\n    height: 28\n  },\n  shadow: {\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2\n  }\n});\nexport default ArButton;","map":{"version":3,"sources":["C:/DEV/argon-react-native-master/argon-react-native-master/components/Button.js"],"names":["React","PropTypes","Button","argonTheme","ArButton","props","small","shadowless","children","color","style","colorStyle","COLORS","toUpperCase","buttonStyles","styles","smallButton","backgroundColor","shadow","fontSize","fontWeight","Component","propTypes","bool","oneOfType","string","oneOf","StyleSheet","create","width","height","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,UAAP;;IAEMC,Q;;;;;;;;;;;;;WACJ,kBAAS;AAAA,wBACyD,KAAKC,KAD9D;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,QADpB,eACoBA,QADpB;AAAA,UAC8BC,KAD9B,eAC8BA,KAD9B;AAAA,UACqCC,KADrC,eACqCA,KADrC;AAAA,UAC+CL,KAD/C;;AAGP,UAAMM,UAAU,GAAGF,KAAK,IAAIN,UAAU,CAACS,MAAX,CAAkBH,KAAK,CAACI,WAAN,EAAlB,CAA5B;AAEA,UAAMC,YAAY,GAAG,CACnBR,KAAK,IAAIS,MAAM,CAACC,WADG,EAEnBP,KAAK,IAAI;AAAEQ,QAAAA,eAAe,EAAEN;AAAnB,OAFU,EAGnB,CAACJ,UAAD,IAAeQ,MAAM,CAACG,MAHH,oBAIfR,KAJe,EAArB;AAOA,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEI,YADT;AAEE,QAAA,UAAU,MAFZ;AAGE,QAAA,SAAS,EAAE;AAAEK,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,UAAU,EAAE;AAA5B;AAHb,SAIMf,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMGG,QANH,CADF;AAUD;;;;EAvBoBR,KAAK,CAACqB,S;;AA0B7BjB,QAAQ,CAACkB,SAAT,GAAqB;AACnBhB,EAAAA,KAAK,EAAEL,SAAS,CAACsB,IADE;AAEnBhB,EAAAA,UAAU,EAAEN,SAAS,CAACsB,IAFH;AAGnBd,EAAAA,KAAK,EAAER,SAAS,CAACuB,SAAV,CAAoB,CACzBvB,SAAS,CAACwB,MADe,EAEzBxB,SAAS,CAACyB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,MAApC,EAA4C,OAA5C,EAAqD,SAArD,EAAgE,SAAhE,CAAhB,CAFyB,CAApB;AAHY,CAArB;AASA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,WAAW,EAAE;AACXa,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,MAAM,EAAE;AAFG,GADkB;AAK/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,WAAW,EAAE,OADP;AAENC,IAAAA,YAAY,EAAE;AAAEH,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAFR;AAGNG,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE,GAJT;AAKNC,IAAAA,SAAS,EAAE;AALL;AALuB,CAAlB,CAAf;AAcA,eAAe/B,QAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport PropTypes from 'prop-types';\nimport { Button } from \"galio-framework\";\n\nimport argonTheme from \"../constants/Theme\";\n\nclass ArButton extends React.Component {\n  render() {\n    const { small, shadowless, children, color, style, ...props } = this.props;\n    \n    const colorStyle = color && argonTheme.COLORS[color.toUpperCase()];\n\n    const buttonStyles = [\n      small && styles.smallButton,\n      color && { backgroundColor: colorStyle },\n      !shadowless && styles.shadow,\n      {...style}\n    ];\n\n    return (\n      <Button\n        style={buttonStyles}\n        shadowless\n        textStyle={{ fontSize: 12, fontWeight: '700' }}\n        {...props}\n      >\n        {children}\n      </Button>\n    );\n  }\n}\n\nArButton.propTypes = {\n  small: PropTypes.bool,\n  shadowless: PropTypes.bool,\n  color: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'error', 'success', 'warning'])\n  ])\n}\n\nconst styles = StyleSheet.create({\n  smallButton: {\n    width: 75,\n    height: 28\n  },\n  shadow: {\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 4 },\n    shadowRadius: 4,\n    shadowOpacity: 0.1,\n    elevation: 2,\n  },\n});\n\nexport default ArButton;\n"]},"metadata":{},"sourceType":"module"}