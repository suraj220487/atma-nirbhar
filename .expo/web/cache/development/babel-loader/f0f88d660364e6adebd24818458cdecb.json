{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/satya/Workspace/Projects/navigation-ex/packages/native/src/NavigationContainer.tsx\";\nimport * as React from 'react';\nimport { BaseNavigationContainer } from '@react-navigation/core';\nimport ThemeProvider from \"./theming/ThemeProvider\";\nimport DefaultTheme from \"./theming/DefaultTheme\";\nimport useBackButton from \"./useBackButton\";\nvar NavigationContainer = React.forwardRef(function NavigationContainer(_ref, ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? DefaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, [\"theme\"]);\n\n  var refContainer = React.useRef(null);\n  useBackButton(refContainer);\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  return React.createElement(ThemeProvider, {\n    value: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, React.createElement(BaseNavigationContainer, _extends({}, rest, {\n    ref: refContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  })));\n});\nexport default NavigationContainer;","map":{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","React","theme","DefaultTheme","rest","refContainer","useBackButton"],"mappings":";;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,uBAAA,QAAA,wBAAA;AAKA,OAAA,aAAA;AACA,OAAA,YAAA;AACA,OAAA,aAAA;AAkBA,IAAMA,mBAAmB,GAAGC,KAAK,CAALA,UAAAA,CAAiB,SAAA,mBAAA,CAAA,IAAA,EAAA,GAAA,EAG3C;AAAA,MAAA,UAAA,GAAA,IAAA,CAFEC,KAEF;AAAA,MAFEA,KAEF,GAAA,UAAA,KAAA,KAAA,CAAA,GAFUC,YAEV,GAAA,UAAA;AAAA,MAF2BC,IAE3B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAMC,YAAY,GAAGJ,KAAK,CAALA,MAAAA,CAArB,IAAqBA,CAArB;AAEAK,EAAAA,aAAa,CAAbA,YAAa,CAAbA;AAEAL,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B,YAAA;AAAA,WAAMI,YAAY,CAAlB,OAAA;AAA/BJ,GAAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,IAAA,KAAK,EAApB,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAmC,IAAA,GAAG,EAAtC,YAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAFJ;AAEI;AAAA,GAAA,CAAA,CADF,CADF;AAVF,CAA4BA,CAA5B;AAiBA,eAAA,mBAAA","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport useBackButton from './useBackButton';\nimport { Theme } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n};\n\n/**\n * Container component which holds the navigation state\n * designed for mobile apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  { theme = DefaultTheme, ...rest }: Props,\n  ref: React.Ref<NavigationContainerRef>\n) {\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  return (\n    <ThemeProvider value={theme}>\n      <BaseNavigationContainer {...rest} ref={refContainer} />\n    </ThemeProvider>\n  );\n});\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}